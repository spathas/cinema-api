{"version":3,"sources":["handlerFactory.js"],"names":["catchAsync","require","AppError","APIFeatures","exports","deleteOne","Model","req","res","next","findByIdAndDelete","params","id","doc","status","json","data","updateOne","findByIdAndUpdate","body","runValidators","createOne","create","getOne","popOptions","query","findById","populate","path","select","getAll","filter","titleId","title","features","find","sort","limitFields","paginate","results","length"],"mappings":"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","sourcesContent":["const catchAsync = require('../utils/catchAsync');\nconst AppError = require('../utils/appError');\nconst APIFeatures = require('../utils/apiFeatures');\n\nexports.deleteOne = Model =>\n  catchAsync(async (req, res, next) => {\n    const doc = await Model.findByIdAndDelete(req.params.id);\n\n    if (!doc) {\n      return next(new AppError('No document found with that ID', 404));\n    }\n\n    res.status(204).json({\n      status: 'success',\n      data: null\n    });\n  });\n\nexports.updateOne = Model =>\n  catchAsync(async (req, res, next) => {\n    const doc = await Model.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n      runValidators: true\n    });\n\n    if (!doc) {\n      return next(new AppError('No document found with that ID', 404));\n    }\n\n    res.status(200).json({\n      status: 'success',\n      data: {\n        data: doc\n      }\n    });\n  });\n\nexports.createOne = Model =>\n  catchAsync(async (req, res, next) => {\n    const doc = await Model.create(req.body);\n\n    res.status(201).json({\n      status: 'success',\n      data: {\n        data: doc\n      }\n    });\n  });\n\nexports.getOne = (Model, popOptions) =>\n  catchAsync(async (req, res, next) => {\n    let query = Model.findById(req.params.id).populate({\n      path: 'reviews',\n      select: 'name '\n    });\n    if (popOptions) query = query.populate(popOptions);\n    const doc = await query;\n\n    if (!doc) {\n      return next(new AppError('No document found with that ID', 404));\n    }\n\n    res.status(200).json({\n      status: 'success',\n      data: {\n        data: doc\n      }\n    });\n  });\n\nexports.getAll = Model =>\n  catchAsync(async (req, res, next) => {\n    // To allow for nested GET reviews on title (hack)\n    let filter = {};\n    if (req.params.titleId) filter = { title: req.params.titleId };\n\n    const features = new APIFeatures(Model.find(filter), req.query)\n      .filter()\n      .sort()\n      .limitFields()\n      .paginate();\n    // const doc = await features.query.explain();\n    const doc = await features.query;\n\n    // SEND RESPONSE\n    res.status(200).json({\n      status: 'success',\n      results: doc.length,\n      data: {\n        data: doc\n      }\n    });\n  });\n"],"file":"handlerFactory.dev.js"}