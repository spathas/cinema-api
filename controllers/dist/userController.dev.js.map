{"version":3,"sources":["userController.js"],"names":["User","require","catchAsync","AppError","factory","filterObj","obj","allowedFields","newObj","Object","keys","forEach","el","includes","exports","getMe","req","res","next","params","id","user","updateMe","body","password","passwordConfirm","filteredBody","findByIdAndUpdate","runValidators","updatedUser","status","json","deleteMe","active","data","createUser","message","getAllUsers","getAll","getUser","getOne","updateUser","updateOne","deleteUser","deleteOne"],"mappings":"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","sourcesContent":["const User = require('../models/userModel');\nconst catchAsync = require('../utils/catchAsync');\nconst AppError = require('../utils/appError');\nconst factory = require('./handlerFactory');\n\nconst filterObj = (obj, ...allowedFields) => {\n  const newObj = {};\n  Object.keys(obj).forEach(el => {\n    if (allowedFields.includes(el)) newObj[el] = obj[el];\n  });\n\n  return newObj;\n};\n\nexports.getMe = (req, res, next) => {\n  req.params.id = req.user.id;\n  next();\n};\n\n// UpdateMe update data of current user.\nexports.updateMe = catchAsync(async (req, res, next) => {\n  // Create an error if user POST password data.\n  if (req.body.password || req.body.passwordConfirm) {\n    return next(\n      new AppError(\n        'This router does not support password update. Please visit /updateMyPassword.',\n        400\n      )\n    );\n  }\n  // Filtered out unwanted fields names that are not allowed to be updated.\n  const filteredBody = filterObj(req.body, 'name', 'email');\n  // Update user document.\n  const updatedUser = await User.findByIdAndUpdate(req.user.id, filteredBody, {\n    new: true,\n    runValidators: true\n  });\n\n  res.status(200).json({\n    status: 'success',\n    user: updatedUser\n  });\n});\n\nexports.deleteMe = catchAsync(async (req, res, next) => {\n  await User.findByIdAndUpdate(req.user.id, { active: false });\n\n  res.status(204).json({\n    status: 'success',\n    data: null\n  });\n});\n\nexports.createUser = (req, res) => {\n  res.status(500).json({\n    status: 'error',\n    message: 'This route is not defined. Please use signup route instead.'\n  });\n};\n\nexports.getAllUsers = factory.getAll(User);\nexports.getUser = factory.getOne(User);\nexports.updateUser = factory.updateOne(User);\nexports.deleteUser = factory.deleteOne(User);\n"],"file":"userController.dev.js"}