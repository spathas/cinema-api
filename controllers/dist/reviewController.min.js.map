{"version":3,"sources":["reviewController.js"],"names":["Review","require","factory","exports","setTourUserIds","req","res","next","body","title","params","titleId","user","getAllReviews","getAll","getReview","getOne","createReview","createOne","updateOne"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,2BACjBC,QAAUD,QAAQ,oBAExBE,QAAQC,eAAiB,SAACC,EAAKC,EAAKC,GAE7BF,EAAIG,KAAKC,QAAOJ,EAAIG,KAAKC,MAAQJ,EAAIK,OAAOC,SAF5CN,EAACD,KAAAA,OAARC,EAAyBG,KAAAI,KAAAP,EAAMC,KAAKC,IAClCA,KAGAA,QAAIM,cAAAX,QAAAY,OAAAd,QACLG,QALDY,UAAAb,QAAAc,OAAAhB,QASAG,QAAQc,aAAef,QAAQgB,UAAUlB,QAFzCG,QAAQU,aAARX,QAA+BiB,UAAQnB,QACvCG,QAAQY,aAAYb,QAAQc,UAARhB","file":"reviewController.min.js","sourcesContent":["const Review = require('./../models/reviewModel');\nconst factory = require('./handlerFactory');\n\nexports.setTourUserIds = (req, res, next) => {\n  // Allow nested routes\n  if (!req.body.title) req.body.title = req.params.titleId;\n  if (!req.body.user) req.body.user = req.user.id;\n  next();\n};\n\nexports.getAllReviews = factory.getAll(Review);\nexports.getReview = factory.getOne(Review);\nexports.createReview = factory.createOne(Review);\nexports.updateReview = factory.updateOne(Review);\nexports.deleteReview = factory.deleteOne(Review);\n"]}