{"version":3,"sources":["userController.js"],"names":["User","require","catchAsync","factory","filterObj","obj","_len","arguments","length","allowedFields","Array","_key","AppError","Object","keys","forEach","el","includes","newObj","exports","getMe","req","res","next","id","user","updateMe","filteredBody","updatedUser","regeneratorRuntime","async","_context","prev","password","abrupt","params","body","awrap","findByIdAndUpdate","new","runValidators","sent","status","json","stop","deleteMe","_context2","active","data","message","getAllUsers","getAll","getUser","getOne","updateUser","updateOne","deleteUser","deleteOne"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,uBACfC,WAAaD,QAAQ,uBADrBD,SAAOC,QAAQ,qBAGfE,QAAUF,QAAQ,oBAElBG,UAAY,SAACC,GAA0B,IAAA,IAAAC,EAAAC,UAAAC,OAAlBC,EAAkB,IAAAC,MAAA,EAAAJ,EAAAA,EAAA,EAAA,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAlBF,EAAkBE,EAAA,GAAAJ,UAAAI,GAH7C,IAAMC,EAAWX,GAG4B,OAE3CY,OAAOC,KAAKT,GAAKU,QAAQ,SAAAC,GAJrBb,EAAkBc,SAAAD,KAAAE,EAAxBF,GAAAX,EAAAW,MAE6CE,GAS7CC,QAAQC,MAAQ,SAACC,EAAKC,EAAKC,GARzBF,EAAMH,OAAMM,GAAZH,EAAAI,KAAAD,GACAX,KAKDM,QAPDO,SAAAxB,WAAA,SAAAmB,EAAAC,EAAAC,GAAA,IAAAI,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAR,MAAA,KAAA,EAAA,GASAJ,EAAQC,KAARa,UAAiBZ,EAAKC,KAAKC,gBAT3B,OAAAQ,EAAAG,OAAA,SAUMC,EACA,IAAAvB,SAGN,gFAOQ,OArBRmB,EAAAR,KAAA,EAAA,MAAA,KAAA,EAAA,OAe8BI,EAAAvB,UAAAiB,EAAAe,KAAA,OAAA,SAf9BL,EAAAR,KAAA,EAAAM,mBAAAQ,MAe8BrC,KAAAsC,kBAAAjB,EAAAI,KAAAD,GAAAG,EAAA,CAAAY,KAAA,EAAAC,eAAA,KAf9B,KAAA,EAe8BZ,EAf9BG,EAAAU,KAiCEnB,EAAIoB,OAAO,KAAKC,KAAK,CAlBOD,OAAA,UAoB1BjB,KAAMG,IAnCV,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAa,YAuCAzB,QAAQ0B,SAAW3C,WAAW,SAAOmB,EAAKC,GAAZ,OAAAO,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAvB,KAAA,EAAAM,mBAAAQ,MAxBArC,KAAAsC,kBAAAjB,EAAAI,KAAAD,GAAA,CAAAuB,QAAA,KAwBA,KAAA,EAV1BzB,EAAAoB,OAAA,KAAAC,KAD0E,CAE1EH,OAAAA,UAF0EQ,KAAA,OAWhD,KAAA,EAAA,IAAA,MAAA,OAAAF,EAAAF,YAN5BtB,QAAAA,WAAW,SAAAD,EAAKsB,GACdD,EAAAA,OAAAA,KAAMC,KAAE,CACRlB,OAAAA,QAFmBwB,QAArB,iEAlB4B9B,QAAA+B,YAAA/C,QAAAgD,OAAAnD,MAAAmB,QAAAiC,QAAAjD,QAAAkD,OAAArD,MAAAmB,QAAAmC,WAAAnD,QAAAoD,UAAAvD,MAAAmB,QAAAqC,WAAArD,QAAAsD,UAAAzD","file":"userController.min.js","sourcesContent":["const User = require('../models/userModel');\nconst catchAsync = require('../utils/catchAsync');\nconst AppError = require('../utils/appError');\nconst factory = require('./handlerFactory');\n\nconst filterObj = (obj, ...allowedFields) => {\n  const newObj = {};\n  Object.keys(obj).forEach(el => {\n    if (allowedFields.includes(el)) newObj[el] = obj[el];\n  });\n\n  return newObj;\n};\n\nexports.getMe = (req, res, next) => {\n  req.params.id = req.user.id;\n  next();\n};\n\n// UpdateMe update data of current user.\nexports.updateMe = catchAsync(async (req, res, next) => {\n  // Create an error if user POST password data.\n  if (req.body.password || req.body.passwordConfirm) {\n    return next(\n      new AppError(\n        'This router does not support password update. Please visit /updateMyPassword.',\n        400\n      )\n    );\n  }\n  // Filtered out unwanted fields names that are not allowed to be updated.\n  const filteredBody = filterObj(req.body, 'name', 'email');\n  // Update user document.\n  const updatedUser = await User.findByIdAndUpdate(req.user.id, filteredBody, {\n    new: true,\n    runValidators: true\n  });\n\n  res.status(200).json({\n    status: 'success',\n    user: updatedUser\n  });\n});\n\nexports.deleteMe = catchAsync(async (req, res, next) => {\n  await User.findByIdAndUpdate(req.user.id, { active: false });\n\n  res.status(204).json({\n    status: 'success',\n    data: null\n  });\n});\n\nexports.createUser = (req, res) => {\n  res.status(500).json({\n    status: 'error',\n    message: 'This route is not defined. Please use signup route instead.'\n  });\n};\n\nexports.getAllUsers = factory.getAll(User);\nexports.getUser = factory.getOne(User);\nexports.updateUser = factory.updateOne(User);\nexports.deleteUser = factory.deleteOne(User);\n"]}