"use strict";var mongoose=require("mongoose"),Title=require("./titleModel"),reviewSchema=new mongoose.Schema({review:{type:String,required:[!0,"Review can not be empty!"]},rating:{type:Number,min:1,max:5},createdAt:{type:Date,default:Date.now},title:{type:mongoose.Schema.ObjectId,ref:"Title",required:[!0,"Review must belong to a movie title."]},user:{type:mongoose.Schema.ObjectId,ref:"User",required:[!0,"Review must belong to a user"]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}});reviewSchema.index({title:1,user:1},{unique:!0}),reviewSchema.pre(/^find/,function(e){this.populate({path:"user",select:"name photo"}),e()}),reviewSchema.statics.calcAverageRatings=function(t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.aggregate([{$match:{title:t}},{$group:{_id:"$title",nRating:{$sum:1},avgRating:{$avg:"$rating"}}}]));case 2:if(0<(r=e.sent).length)return e.next=6,regeneratorRuntime.awrap(Title.findByIdAndUpdate(t,{ratingsQuantity:r[0].nRating,ratingsAverage:r[0].avgRating}));e.next=8;break;case 6:e.next=10;break;case 8:return e.next=10,regeneratorRuntime.awrap(Title.findByIdAndUpdate(t,{ratingsQuantity:0,ratingsAverage:4.5}));case 10:case"end":return e.stop()}},null,this)},reviewSchema.index({tour:1,user:1},{unique:!0}),reviewSchema.post("save",function(){this.constructor.calcAverageRatings(this.title)}),reviewSchema.pre(/^findOneAnd/,function(t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.findOne());case 2:this.r=e.sent,t();case 4:case"end":return e.stop()}},null,this)}),reviewSchema.post(/^findOneAnd/,function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.r.constructor.calcAverageRatings(this.r.title));case 2:case"end":return e.stop()}},null,this)});var Review=mongoose.model("Review",reviewSchema);module.exports=Review;
//# sourceMappingURL=reviewModel.min.js.map
