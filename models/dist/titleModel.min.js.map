{"version":3,"sources":["titleModel.js"],"names":["mongoose","require","titleSchema","Schema","type","String","unique","year","Number","writers","director","duration","description","trim","story","imageCover","trailer","category","ratingsAverage","min","max","val","Math","round","ratingsQuantity","default","toJSON","virtuals","toObject","virtual","localField","ref","Title","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAGnBC,YAAc,IAAIF,SAASG,OAC/B,CADID,KAAAA,CAEEE,KAAEC,OACJD,SAAMC,EACNJ,QAAS,EACTK,MAAQ,GAJZC,KAAA,CAOMH,KAAEI,OACJJ,SADI,EAAA,EAAA,qCAPRK,QAAA,CAWEA,KAAS,CAAAJ,QACPD,SAAOC,EAAD,EADC,+BAXXK,SAAA,CAeEA,KAAU,CAAAL,QACRD,SAAOC,EAAD,EADE,iCAfZM,SAAA,CAmBEA,KAAUH,OACRJ,SADQ,EAAA,EAAA,iCAnBZQ,YAAA,CAuBEA,KAAAA,OACER,MAAMC,EACNQ,SAFW,EAAA,EAAA,oCAvBfC,MAAA,CA4BEA,KAAOT,OACLD,MAAMC,GA7BVU,WAAA,CAgCEA,KAAUV,OACRD,SADU,EAAA,EAAA,oCAhCdY,QAAA,CAoCEA,KAASX,OACPD,SADO,EAAA,EAAA,gCApCXa,SAAA,CAwCEA,KAAU,CAAAZ,QACRD,SAAOC,EAAD,EADE,4CAxCZa,eAAA,CA4CEA,KAAAA,OACEd,QAAMI,IACNW,IAAA,CAAA,EAAS,4BACTA,IAAK,CAAA,EAAI,4BACTC,IAAK,SAAAC,GAAI,OAAAC,KAAAC,MAAA,GAAAF,GAJK,KAKNG,gBAASD,CAAqBnB,KAAAI,OAItCiB,QAAS,IADTrB,CACAsB,OAAA,CAAAC,UAAS,GAFMC,SAAA,CAAAD,UAAA,KAMTzB,YADV2B,QAAA,UAAA,CAEED,IAAAA,SAAYD,aAAU,QAAZG,WAAA,QAKZC,IAAGC,MAAEhC,SADwBiC,MAAA,QAAA/B,aAG7B4B,OAAAA,QAAYE","file":"titleModel.min.js","sourcesContent":["const mongoose = require('mongoose');\n// const User = require('./userModel');\n\nconst titleSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      require: true,\n      unique: true,\n      trim: true\n    },\n    year: {\n      type: Number,\n      required: [true, 'A movie must have a release year']\n    },\n    writers: {\n      type: [String],\n      required: [true, 'A movie must have a writer']\n    },\n    director: {\n      type: [String],\n      required: [true, 'A movie must have a director']\n    },\n    duration: {\n      type: Number,\n      required: [true, 'A movie must have a duration']\n    },\n    description: {\n      type: String,\n      trim: true,\n      required: [true, 'A movie must have a description']\n    },\n    story: {\n      type: String,\n      trim: true\n    },\n    imageCover: {\n      type: String,\n      required: [true, 'A movie must have a cover image']\n    },\n    trailer: {\n      type: String,\n      required: [true, 'A movie must have a trailer']\n    },\n    category: {\n      type: [String],\n      required: [true, 'A movie must have at least one category']\n    },\n    ratingsAverage: {\n      type: Number,\n      default: 4.5,\n      min: [1, 'Rating must be above 1.0'],\n      max: [5, 'Rating must be below 5.0'],\n      set: val => Math.round(val * 10) / 10 // 4.666666, 46.6666, 47, 4.7\n    },\n    ratingsQuantity: {\n      type: Number,\n      default: 0\n    }\n  },\n  {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\ntitleSchema.virtual('reviews', {\n  ref: 'Review',\n  foreignField: 'title',\n  localField: '_id'\n});\n\nconst Title = mongoose.model('Title', titleSchema);\n\nmodule.exports = Title;\n"]}