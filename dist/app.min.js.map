{"version":3,"sources":["app.js"],"names":["express","require","morgan","helmet","xss","globalErrorHandler","mongoSanitize","userRouter","app","use","NODE_ENV","limiter","rateLimit","max","message","json","limit","windowMs","concat","__dirname","res","next","req","requestTime","Date","toISOString","titleRouter","hallRouter","AppError","originalUrl","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASD,QAAQ,UADjBD,UAAUC,QAAQ,sBAGlBE,OAASF,QAAQ,UAFjBC,cAAiBD,QAAvB,0BAIMG,IAAMH,QAAQ,aAFdE,SAASF,QAAQ,oBAMjBI,mBAAqBJ,QAAQ,iCAL7BK,YAAgBL,QAAQ,wBAOxBM,WAAaN,QAAQ,uBANrBG,WAAcH,QAAA,uBASdO,IAAMR,UAIZQ,IAAIC,IAAIN,UAPmB,gBAArBI,QAAAA,IAAUG,UAWdF,IAAIC,IAAIP,OAAO,QALjB,IAAAS,QAAAC,UAAA,CAUEC,IAAK,IATPL,SAAQL,KAWNW,QAAS,iEAPTN,IAAAA,IAAIC,OAAUE,SAYhBH,IAAIC,IAAIT,QAAQe,KAAK,CAAEC,MAAO,UAN5BC,IAAAA,IAAAA,iBAGFT,IAAIC,IAAIL,OAcRI,IAAIC,IAAIT,QAAO,OAAP,GAAAkB,OAAkBC,UAAlB,aALRX,IAAIC,IAAIL,SAAAA,EAARgB,EAEAC,GAEAC,EAAAC,aAAA,IAAAC,MAAAC,cACAjB,MAUAA,IAAIC,IAAI,iBAAkBiB,aAJxBL,IAAAA,IAAI,gBAAAM,YACLnB,IAEDC,IAAA,gBAAAF,YACAC,IAAIC,IAAI,IAAA,SAAAa,EAAAF,EAARC,GACAb,EAAA,IAAQoB,SAAR,cAAAV,OAAyBS,EAAzBE,YAAA,oBAAA,QAIER,IAAAA,IAAKhB,oBAGPG,OAAAsB,QAAQzB","file":"app.min.js","sourcesContent":["const express = require('express');\nconst morgan = require('morgan');\nconst rateLimit = require('express-rate-limit');\nconst helmet = require('helmet');\nconst mongoSanitize = require('express-mongo-sanitize');\nconst xss = require('xss-clean');\n// const hpp = require('hpp');\n\nconst AppError = require('./utils/appError');\nconst globalErrorHandler = require('./controllers/errorController');\nconst titleRouter = require('./routes/titleRoutes');\nconst userRouter = require('./routes/userRoutes');\nconst hallRouter = require('./routes/hallRoutes');\n\nconst app = express();\n\n// 1) GLOBAL MIDDLEWARE\n// Set security HTTP headers\napp.use(helmet());\n\n// Development logging\nif (process.env.NODE_ENV === 'development') {\n  app.use(morgan('dev'));\n}\n\n// Limit requests from same API\nconst limiter = rateLimit({\n  max: 100,\n  windowMs: 60 * 60 * 1000,\n  message: 'Too many requests from this IP, please try again in an hour!'\n});\napp.use('/api', limiter);\n\n// Body parser, reading data from body into req.body\napp.use(express.json({ limit: '10kb' }));\n\n// Data sanitization against NoSQL query injection\napp.use(mongoSanitize());\n\n// Data sanitization against XSS\napp.use(xss());\n\n// Prevent parameter pollution\n\n// Serving static files\napp.use(express.static(`${__dirname}/public`));\n\n// Test middleware\napp.use((req, res, next) => {\n  req.requestTime = new Date().toISOString();\n  // console.log(req.headers);\n  next();\n});\n\n// 3) ROUTES\napp.use('/api/v1/titles', titleRouter);\napp.use('/api/v1/halls', hallRouter);\napp.use('/api/v1/users', userRouter);\n\napp.all('*', (req, res, next) => {\n  next(new AppError(`Can't find ${req.originalUrl} on this server!`, 404));\n});\n\napp.use(globalErrorHandler);\n\nmodule.exports = app;\n"]}