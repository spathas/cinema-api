{"version":3,"sources":["movieModel.js"],"names":["mongoose","require","movieSchema","Schema","type","String","required","unique","trim","maxlength","minlength","Number","ratingsAverage","min","max","set","Math","val","round","ratingsQuantity","description","imageCover","createdAt","Date","now","select","startDates","secretMovie","Boolean","toJSON","virtuals","Movie","model","module","exports"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAKnBC,YAAc,IAAIF,SAASG,OAC/B,CADID,KAAAA,CAEEE,KAAEC,OACJD,SADI,EAAA,EAAA,4BAEJE,QAAU,EACVC,MAAQ,EACRC,UAJI,CAKJC,GAIAC,2DAVJA,UAAA,CAAA,GAAA,4DAeIN,KAAMO,OACNL,SAAU,CAhBdF,KAAAO,OAkBEC,SAAc,EAAA,EAAE,iCAEdA,eAFc,CAGdC,KAAKF,OACLG,QAAS,IACTC,IAAK,CAAA,EAAA,4BAAGD,IAAA,CAAA,EAAIE,4BAA0BD,IAAA,SAAAE,GAAA,OAAAD,KAAAE,MAAA,GAAAD,GAAA,KAvB1CE,gBAAA,CAyBEA,KAAAA,OACEf,QAAMO,GA1BVS,YAAA,CA6BEA,KAAAA,OACEhB,MAAMC,GA9BVgB,WAAA,CAiCEA,KAAUhB,OACRD,SADU,EAAA,EAAA,oCAjCdkB,UAAA,CAqCEA,KAASC,KACPnB,QADSmB,KAAAC,MAETC,QAAA,GAvCJC,WAAA,CAAAH,MA0CEG,YAAaH,CACbI,KAAAA,QACEvB,SAAMwB,IA7CQ,CAkDhBC,OAAQ,CAAAC,UAAA,GAAEA,SAAU,CAAAA,UAAA,KAkDlBC,MAAQ/B,SAASgC,MAAM,QAAS9B,aAEtC+B,OAAOC,QAAUH","file":"movieModel.min.js","sourcesContent":["const mongoose = require('mongoose');\n// const slugify = require('slugify');\n// const User = require('./userModel');\n// const validator = require('validator');\n\nconst movieSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, 'A Movie must have a name'],\n      unique: true,\n      trim: true,\n      maxlength: [\n        40,\n        'A Movie name must have less or equal then 40 characters'\n      ],\n      minlength: [10, 'A Movie name must have more or equal then 10 characters']\n      // validate: [validator.isAlpha, 'Movie name must only contain characters']\n    },\n    slug: String,\n    duration: {\n      type: Number,\n      required: [true, 'A Movie must have a duration']\n    },\n    ratingsAverage: {\n      type: Number,\n      default: 4.5,\n      min: [1, 'Rating must be above 1.0'],\n      max: [5, 'Rating must be below 5.0'],\n      set: val => Math.round(val * 10) / 10 // 4.666666, 46.6666, 47, 4.7\n    },\n    ratingsQuantity: {\n      type: Number,\n      default: 0\n    },\n    description: {\n      type: String,\n      trim: true\n    },\n    imageCover: {\n      type: String,\n      required: [true, 'A Movie must have a cover image']\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now(),\n      select: false\n    },\n    startDates: [Date],\n    secretMovie: {\n      type: Boolean,\n      default: false\n    }\n  },\n  {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\n// // movieSchema.index({ price: 1 });\n// movieSchema.index({ price: 1, ratingsAverage: -1 });\n// movieSchema.index({ slug: 1 });\n// movieSchema.index({ startLocation: '2dsphere' });\n\n// movieSchema.virtual('durationWeeks').get(function() {\n//   return this.duration / 7;\n// });\n\n// // Virtual populate\n// movieSchema.virtual('reviews', {\n//   ref: 'Review',\n//   foreignField: 'Movie',\n//   localField: '_id'\n// });\n\n// // DOCUMENT MIDDLEWARE: runs before .save() and .create()\n// movieSchema.pre('save', function(next) {\n//   this.slug = slugify(this.name, { lower: true });\n//   next();\n// });\n\n// // QUERY MIDDLEWARE\n// // movieSchema.pre('find', function(next) {\n// movieSchema.pre(/^find/, function(next) {\n//   this.find({ secretMovie: { $ne: true } });\n\n//   this.start = Date.now();\n//   next();\n// });\n\n// movieSchema.pre(/^find/, function(next) {\n//   this.populate({\n//     path: 'guides',\n//     select: '-__v -passwordChangedAt'\n//   });\n\n//   next();\n// });\n\n// movieSchema.post(/^find/, function(docs, next) {\n//   console.log(`Query took ${Date.now() - this.start} milliseconds!`);\n//   next();\n// });\n\nconst Movie = mongoose.model('Movie', movieSchema);\n\nmodule.exports = Movie;\n"]}