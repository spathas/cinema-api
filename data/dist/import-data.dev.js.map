{"version":3,"sources":["import-data.js"],"names":["fs","require","mongoose","dotenv","Title","Hall","User","Review","config","path","DB","process","env","DATABASE","replace","DATABASE_PASSWORD","connect","useNewUrlParser","useCreateIndex","useFindAndModify","useUnifiedTopology","then","console","log","titles","JSON","parse","readFileSync","__dirname","halls","users","reviews","importData","create","validateBeforeSave","exit","deleteData","deleteMany","argv"],"mappings":"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","sourcesContent":["const fs = require('fs');\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst Title = require('../models/titleModel');\nconst Hall = require('../models/hallModel');\nconst User = require('../models/userModel');\nconst Review = require('../models/reviewModel');\n\ndotenv.config({ path: './config.env' });\n\nconst DB = process.env.DATABASE.replace(\n  '<PASSWORD>',\n  process.env.DATABASE_PASSWORD\n);\n\nmongoose\n  .connect(DB, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true\n  })\n  .then(() => console.log('DB connection successful!'));\n\n// READ JSON FILE\nconst titles = JSON.parse(fs.readFileSync(`${__dirname}/titles.json`, 'utf-8'));\nconst halls = JSON.parse(fs.readFileSync(`${__dirname}/halls.json`, 'utf-8'));\nconst users = JSON.parse(fs.readFileSync(`${__dirname}/users.json`, 'utf-8'));\nconst reviews = JSON.parse(\n  fs.readFileSync(`${__dirname}/reviews.json`, 'utf-8')\n);\n\n// IMPORT DATA INTO DB\nconst importData = async () => {\n  try {\n    await Title.create(titles);\n    await Hall.create(halls);\n    await Review.create(reviews);\n    await User.create(users, { validateBeforeSave: false });\n    console.log('Data successfully loaded!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\n// DELETE ALL DATA FROM DB\nconst deleteData = async () => {\n  try {\n    await Title.deleteMany();\n    await User.deleteMany();\n    await Review.deleteMany();\n    await Hall.deleteMany();\n    console.log('Data successfully deleted!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\nif (process.argv[2] === '--import') {\n  importData();\n} else if (process.argv[2] === '--delete') {\n  deleteData();\n}\n"],"file":"import-data.dev.js"}