{"version":3,"sources":["import-data.js"],"names":["fs","require","mongoose","dotenv","Title","User","Hall","env","DATABASE","replace","process","config","path","useCreateIndex","DB","log","then","JSON","parse","readFileSync","concat","__dirname","halls","console","users","reviews","titles","importData","regeneratorRuntime","async","_context","prev","next","awrap","create","Review","validateBeforeSave","t0","exit","stop","deleteData","_context2","deleteMany","argv"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,MACbC,SAAWD,QAAQ,YADjBE,OAAGF,QAAX,UAGMG,MAAQH,QAAQ,wBAFhBC,KAAQD,QAAGA,uBAIXI,KAAOJ,QAAQ,uBAHfE,OAASF,QAAQ,yBACvBE,OAAMC,OAAQH,CAAAA,KAAQ,iBACtB,IAAMK,GAAOL,QAAQM,IAAAC,SAAAC,QAOnB,aANFC,QAAUH,IAAGN,mBAUbC,SAPAC,QAAOQ,GAAO,CAAEC,iBAAM,EAAtBC,gBAAA,EAEMC,kBAAiBN,EAKvBN,oBACe,IAEXW,KAAAA,WAAAA,OAAAA,QAFWE,IAAA,+BAAA,IAMZC,OAAKC,KAAAC,MAAAlB,GAAAmB,aAAA,GAAAC,OAAAC,UAAA,gBAAA,UAAAC,MAAMC,KAAQR,MAAIf,GAAAmB,aAAA,GAAAC,OAAAC,UAAA,eAAlB,UAERG,MAAAP,KAAAC,MAAAlB,GAAAmB,aAAA,GAAAC,OAAAC,UAAA,eAAA,UAIMI,QAAUR,KAAKC,MAHrBlB,GAAM0B,aAAN,GAAAN,OAAoBF,UAApB,iBAA0B,UAQpBS,WAAa,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAA7B,MAAA8B,OAAAR,SAAA,KAAA,EAAA,OAAAI,EAAAE,KAAA,EAAAJ,mBAAAK,MAAA3B,KAAA4B,OAAAZ,QAAA,KAAA,EAAA,OAAAQ,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAE,OAAAD,OAAAT,UAAA,KAAA,EAAA,OAAAK,EAAAE,KAAA,EAAAJ,mBAAAK,MAAA5B,KAAA6B,OAAAV,MAAA,CAAAY,oBAAA,KAAA,KAAA,EAAAb,QAAAR,IAAA,6BAAAe,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,MAAA,GAAAP,QAAAR,IAAAe,EAAAO,IAAA,KAAA,GAAA3B,QAAA4B,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAAS,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAC,WAAA,WAAA,OAAAZ,mBAAAC,MAAA,SAAAY,GAAA,OAAA,OAAAA,EAAAV,KAAAU,EAAAT,MAAA,KAAA,EAAA,OAAAS,EAAAV,KAAA,EAAAU,EAAAT,KAAA,EAAAJ,mBAAAK,MAAA7B,MAAAsC,cAAA,KAAA,EAAA,OAAAD,EAAAT,KAAA,EAAAJ,mBAAAK,MAiBT5B,KAAKqC,cAjBI,KAAA,EAAA,OAAAD,EAAAT,KAAA,EAAAJ,mBAAAK,MAAAE,OAAAO,cAAA,KAAA,EAAA,OAAAD,EAAAT,KAAA,EAAAJ,mBAAAK,MAAA3B,KAAAoC,cAAA,KAAA,EAAAnB,QAAAR,IAAA,8BAAA0B,EAAAT,KAAA,GAAA,MAAA,KAAA,GAAAS,EAAAV,KAAA,GAAAU,EAAAJ,GAAAI,EAAA,MAAA,GAKUlB,QALVR,IAKU0B,EAAAJ,IALV,KAAA,GAAA3B,QAAA4B,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAA,aAAA7B,QAAAiC,KAAA,GA4BjBhB,aA5BiB,aAAAjB,QAAAiC,KAAA,IAAAH","file":"import-data.min.js","sourcesContent":["const fs = require('fs');\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst Title = require('../models/titleModel');\nconst Hall = require('../models/hallModel');\nconst User = require('../models/userModel');\nconst Review = require('../models/reviewModel');\n\ndotenv.config({ path: './config.env' });\n\nconst DB = process.env.DATABASE.replace(\n  '<PASSWORD>',\n  process.env.DATABASE_PASSWORD\n);\n\nmongoose\n  .connect(DB, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true\n  })\n  .then(() => console.log('DB connection successful!'));\n\n// READ JSON FILE\nconst titles = JSON.parse(fs.readFileSync(`${__dirname}/titles.json`, 'utf-8'));\nconst halls = JSON.parse(fs.readFileSync(`${__dirname}/halls.json`, 'utf-8'));\nconst users = JSON.parse(fs.readFileSync(`${__dirname}/users.json`, 'utf-8'));\nconst reviews = JSON.parse(\n  fs.readFileSync(`${__dirname}/reviews.json`, 'utf-8')\n);\n\n// IMPORT DATA INTO DB\nconst importData = async () => {\n  try {\n    await Title.create(titles);\n    await Hall.create(halls);\n    await Review.create(reviews);\n    await User.create(users, { validateBeforeSave: false });\n    console.log('Data successfully loaded!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\n// DELETE ALL DATA FROM DB\nconst deleteData = async () => {\n  try {\n    await Title.deleteMany();\n    await User.deleteMany();\n    await Review.deleteMany();\n    await Hall.deleteMany();\n    console.log('Data successfully deleted!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\nif (process.argv[2] === '--import') {\n  importData();\n} else if (process.argv[2] === '--delete') {\n  deleteData();\n}\n"]}