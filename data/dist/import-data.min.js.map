{"version":3,"sources":["import-data.js"],"names":["fs","require","mongoose","dotenv","Title","User","config","path","DB","process","env","DATABASE","replace","DATABASE_PASSWORD","useNewUrlParser","useCreateIndex","log","titles","console","parse","readFileSync","concat","__dirname","halls","JSON","users","importData","create","Hall","validateBeforeSave","_context","t0","exit","deleteData","regeneratorRuntime","async","_context2","prev","next","awrap","deleteMany","stop","argv"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,MACbC,SAAWD,QAAQ,YADjBE,OAAGF,QAAX,UAGMG,MAAQH,QAAQ,wBAFhBC,KAAQD,QAAGA,uBAIXI,KAAOJ,QAAQ,uBAErBE,OAAOG,OAAO,CAAEC,KAAM,iBAEtB,IAAMC,GAAKC,QAAQC,IAAIC,SAASC,QALhC,aAOEH,QAAQC,IAAIG,mBAJdV,SAAgBI,QAAMC,GAAA,CAAtBM,iBAAA,EAEMN,gBAAK,EAKXN,kBACe,IAEXa,KAAAA,WAAAA,OAAAA,QAFWC,IAAA,+BAKP,IAAAC,OAAMC,KAAAC,MAAYnB,GAAAoB,aAAA,GAAAC,OAAAC,UAAA,gBAAlB,UAERC,MAAAC,KAAAL,MAAAnB,GAAAoB,aAAA,GAAAC,OAAAC,UAAA,eAAA,UAGMG,MAAQD,KAAKL,MAAMnB,GAAGoB,aAAH,GAAAC,OAAmBC,UAAnB,eAA2C,UAA9DG,WAAaN,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGbO,MAAUC,OAAGV,SAHAE,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGAS,KAAAD,OAAAJ,QAHAJ,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGAd,KAAAsB,OAAAF,MAAA,CAAAI,oBAAA,KAHAV,KAAAA,EAGAD,QAAAF,IAAA,6BAHAG,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAGAD,QAAAF,IAAAc,EAAAC,IAHAZ,KAAAA,GAGAV,QAAAuB,OAHAb,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,OAGAc,WAAA,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAnC,MAAAoC,cAAA,KAAA,EAAAtB,QAAAF,IAAA,8BAAAoB,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAL,GAAAK,EAAA,MAAA,GAIYP,QAAAA,IAAAA,EAAAA,IAJZ,KAAA,EAoBjBpB,QAAQuB,OApBS,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAK,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,aAAAhC,QAAAiC,KAAA,GAAAhB,aAyBY,aAApBjB,QAAQiC,KAAK,IAzBLT","file":"import-data.min.js","sourcesContent":["const fs = require('fs');\nconst mongoose = require('mongoose');\nconst dotenv = require('dotenv');\nconst Title = require('../models/titleModel');\nconst Hall = require('../models/hallModel');\nconst User = require('../models/userModel');\n\ndotenv.config({ path: './config.env' });\n\nconst DB = process.env.DATABASE.replace(\n  '<PASSWORD>',\n  process.env.DATABASE_PASSWORD\n);\n\nmongoose\n  .connect(DB, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useFindAndModify: false\n  })\n  .then(() => console.log('DB connection successful!'));\n\n// READ JSON FILE\nconst titles = JSON.parse(fs.readFileSync(`${__dirname}/titles.json`, 'utf-8'));\nconst halls = JSON.parse(fs.readFileSync(`${__dirname}/halls.json`, 'utf-8'));\nconst users = JSON.parse(fs.readFileSync(`${__dirname}/users.json`, 'utf-8'));\n\n// IMPORT DATA INTO DB\nconst importData = async () => {\n  try {\n    await Title.create(titles);\n    await Hall.create(halls);\n    await User.create(users, { validateBeforeSave: false });\n    console.log('Data successfully loaded!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\n// DELETE ALL DATA FROM DB\nconst deleteData = async () => {\n  try {\n    await Title.deleteMany();\n    console.log('Data successfully deleted!');\n  } catch (err) {\n    console.log(err);\n  }\n  process.exit();\n};\n\nif (process.argv[2] === '--import') {\n  importData();\n} else if (process.argv[2] === '--delete') {\n  deleteData();\n}\n"]}